#if canImport(UIKit)
import UIKit
#endif
import SwiftUI
import PDFKit

struct ShareSheet: UIViewControllerRepresentable {
    let activityItems: [Any]
    let applicationActivities: [UIActivity]? = nil

    func makeUIViewController(context: Context) -> UIActivityViewController {
        let controller = UIActivityViewController(
            activityItems: activityItems,
            applicationActivities: applicationActivities
        )
        return controller
    }

    func updateUIViewController(_ uiViewController: UIActivityViewController, context: Context) {}
}

// MARK: - Share Helper
struct ShareHelper {
    static func shareQuote(breakdown: PricingEngine.PriceBreakdown, clientName: String) {
        let text = """
        Quote Details

        Client: \(clientName)
        Materials: $\(String(format: "%.2f", breakdown.materialsCost))
        Labor: $\(String(format: "%.2f", breakdown.laborCost))
        Total: $\(String(format: "%.2f", breakdown.totalPrice))

        Generated by DTS App
        """

        let activityController = UIActivityViewController(
            activityItems: [text],
            applicationActivities: nil
        )

        if let windowScene = UIApplication.shared.connectedScenes.first as? UIWindowScene,
           let window = windowScene.windows.first,
           let rootViewController = window.rootViewController {

            // For iPad support
            if let popover = activityController.popoverPresentationController {
                popover.sourceView = window
                popover.sourceRect = CGRect(x: window.bounds.midX, y: window.bounds.midY, width: 0, height: 0)
                popover.permittedArrowDirections = []
            }

            rootViewController.present(activityController, animated: true)
        }
    }

    static func shareJobDetails(job: JobberJob) {
        let text = """
        Job Details

        Job ID: \(job.jobId)
        Client: \(job.clientName)
        Address: \(job.address)
        Status: \(job.status)
        Scheduled: \(job.scheduledAt.formatted(.dateTime))

        Shared from DTS App
        """

        let activityController = UIActivityViewController(
            activityItems: [text],
            applicationActivities: nil
        )

        if let windowScene = UIApplication.shared.connectedScenes.first as? UIWindowScene,
           let window = windowScene.windows.first,
           let rootViewController = window.rootViewController {

            // For iPad support
            if let popover = activityController.popoverPresentationController {
                popover.sourceView = window
                popover.sourceRect = CGRect(x: window.bounds.midX, y: window.bounds.midY, width: 0, height: 0)
                popover.permittedArrowDirections = []
            }

            rootViewController.present(activityController, animated: true)
        }
    }
}
